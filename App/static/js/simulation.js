document.addEventListener('DOMContentLoaded', () => {
    const canvas     = document.getElementById('simCanvas');
    const ctx        = canvas.getContext('2d');
    const setupPanel = document.getElementById('setupPanel');
    const btnPrepare = document.getElementById('prepareSim');
    const btnRemove  = document.getElementById('removeDivider');const btnReset   = document.getElementById('resetSim');let particles = [];let dividerOn = true;let props = null;btnPrepare.addEventListener('click', () => {const payload = {compA:  document.getElementById('compA').value,compB:  document.getElementById('compB').value,T0:     +document.getElementById('T0').value,fracA:  +document.getElementById('fracA').value };fetch('/simulation/config', {method: 'POST',headers: { 'Content-Type': 'application/json' },body: JSON.stringify(payload)}).then(res => res.json()).then(data => {props = data;setupPanel.style.display = 'none';btnRemove.disabled = false;btnReset.disabled  = false;initSimulation(props);});});btnRemove.addEventListener('click', () => {dividerOn = false;});btnReset.addEventListener('click', () => {setupPanel.style.display = 'block';btnRemove.disabled = true;btnReset.disabled  = true;particles = [];dividerOn = true;ctx.clearRect(0, 0, canvas.width, canvas.height);});class Particle {constructor(x, y, vx, vy, radius, color) {Object.assign(this, { x, y, vx, vy, radius, color });}update() {this.x += this.vx;this.y += this.vy;if (this.x < this.radius || this.x > canvas.width - this.radius) this.vx *= -1;if (this.y < this.radius || this.y > canvas.height - this.radius) this.vy *= -1;}draw() {ctx.beginPath();ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);ctx.fillStyle = this.color;ctx.fill();}}function initSimulation(p) {particles = [];dividerOn = true;ctx.clearRect(0, 0, canvas.width, canvas.height);const total = 200;const nA = Math.round(p.fracA * total);const nB = total - nA;for (let i = 0; i < nA; i++) {particles.push(new Particle(Math.random() * (canvas.width / 2 - p.radiusA * 2) + p.radiusA,Math.random() * (canvas.height - p.radiusA * 2) + p.radiusA,(Math.random() - 0.5) * 2,(Math.random() - 0.5) * 2,p.radiusA,'cyan'));}for (let i = 0; i < nB; i++) {particles.push(new Particle(Math.random() * (canvas.width / 2 - p.radiusB * 2) + canvas.width / 2 + p.radiusB,Math.random() * (canvas.height - p.radiusB * 2) + p.radiusB,(Math.random() - 0.5) * 2,(Math.random() - 0.5) * 2,p.radiusB,'salmon'));}animate();}function animate() {ctx.clearRect(0, 0, canvas.width, canvas.height);if (dividerOn) {ctx.strokeStyle = '#0f0';ctx.beginPath();ctx.moveTo(canvas.width / 2, 0);ctx.lineTo(canvas.width / 2, canvas.height);ctx.stroke();}particles.forEach(p => { p.update(); p.draw(); });requestAnimationFrame(animate);}});
  